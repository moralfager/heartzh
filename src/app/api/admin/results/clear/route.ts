/**
 * Admin API: Clear All Results
 * DELETE /api/admin/results/clear
 * 
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –∏ —Å–µ—Å—Å–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */

import { NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';

export async function DELETE() {
  try {
    console.log('üóëÔ∏è Admin: Clearing all results and sessions...');

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–¥–µ—Ç–∞–ª–∏ —É–¥–∞–ª—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ onDelete: Cascade)
    const deletedResults = await prisma.result.deleteMany({});
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
    const deletedSessions = await prisma.session.deleteMany({});

    console.log(`‚úÖ Deleted ${deletedResults.count} results and ${deletedSessions.count} sessions`);

    return NextResponse.json({
      success: true,
      message: 'All results and sessions cleared successfully',
      deleted: {
        results: deletedResults.count,
        sessions: deletedSessions.count,
      },
    });
  } catch (error) {
    console.error('‚ùå Error clearing results:', error);
    return NextResponse.json(
      {
        error: 'Failed to clear results',
        message: error instanceof Error ? error.message : 'Unknown error',
      },
      { status: 500 }
    );
  }
}


