# –†—É—á–Ω–æ–π –¥–µ–ø–ª–æ–π –Ω–∞ production —Å–µ—Ä–≤–µ—Ä (PowerShell –≤–µ—Ä—Å–∏—è)

$ErrorActionPreference = "Stop"

Write-Host "üöÄ Manual Production Deploy" -ForegroundColor Cyan
Write-Host "==============================" -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –Ω–∞ –≤–µ—Ç–∫–µ prod
$branch = git rev-parse --abbrev-ref HEAD
if ($branch -ne "prod") {
    Write-Host "‚ùå Error: Must be on 'prod' branch (current: $branch)" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –Ω–µ—Ç –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
$status = git status --porcelain
if ($status) {
    Write-Host "‚ùå Error: You have uncommitted changes" -ForegroundColor Red
    git status --short
    exit 1
}

# Push –≤ prod
Write-Host "üì§ Pushing to prod branch..." -ForegroundColor Yellow
git push origin prod

# SSH –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ–¥ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä)
$SSH_USER = if ($env:SSH_USER) { $env:SSH_USER } else { "root" }
$SSH_HOST = if ($env:SSH_HOST) { $env:SSH_HOST } else { "85.202.192.68" }
$SSH_PORT = if ($env:SSH_PORT) { $env:SSH_PORT } else { "22" }

Write-Host ""
Write-Host "üîê Connecting to $SSH_USER@$SSH_HOST:$SSH_PORT..." -ForegroundColor Yellow
Write-Host ""

# –î–µ–ø–ª–æ–π –∫–æ–º–∞–Ω–¥—ã
$deployScript = @'
set -e
cd /var/www/heartzh

echo "üì• Pulling latest code..."
git fetch --all
git reset --hard origin/prod

echo "üõë Stopping containers..."
docker compose -f docker-compose.prod.yml down || true

echo "üèóÔ∏è Building..."
docker compose -f docker-compose.prod.yml build

echo "üöÄ Starting containers..."
docker compose -f docker-compose.prod.yml up -d

echo ""
echo "‚úÖ Deployment complete!"
echo ""
docker ps
'@

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SSH
ssh -p $SSH_PORT "$SSH_USER@$SSH_HOST" $deployScript

Write-Host ""
Write-Host "üéâ Deploy successful!" -ForegroundColor Green
Write-Host "üåê Check: https://heartofzha.ru" -ForegroundColor Cyan

