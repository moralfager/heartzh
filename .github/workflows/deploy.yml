name: Deploy to VPS (prod branch)

on:
  push:
    branches: [ "prod" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create deploy archive
        run: |
          # Create a deterministic archive from tracked files to avoid 'file changed as we read it'
          git archive -o release.tar.gz HEAD

      - name: Upload archive to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "release.tar.gz"
          target: "/var/www/heartzh/releases/${{ github.sha }}/"

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          command_timeout: 30m
          envs: GITHUB_SHA
          script: |
            set -e
            RELEASE_DIR=/var/www/heartzh/releases/${GITHUB_SHA}
            APP_DIR=/var/www/heartzh/current
            SHARED_DIR=/var/www/heartzh/shared

            echo "üì¶ Preparing release directories..."
            mkdir -p "$RELEASE_DIR" "$SHARED_DIR"
            cd "$RELEASE_DIR"

            echo "üì¶ Extracting archive..."
            tar -xzf release.tar.gz

            # Persist env file between releases
            if [ -f /var/www/heartzh/.env ]; then cp /var/www/heartzh/.env "$SHARED_DIR/.env"; fi
            ln -sf "$SHARED_DIR/.env" "$RELEASE_DIR/.env"

            # Use stable compose project name to keep container names constant
            export COMPOSE_PROJECT_NAME=heartzh

            echo "üõë Stopping containers (if any)..."
            docker compose -f "$RELEASE_DIR/docker-compose.prod.yml" down || true

            echo "üèóÔ∏è Building images..."
            docker compose -f "$RELEASE_DIR/docker-compose.prod.yml" build

            echo "üöÄ Starting containers..."
            docker compose -f "$RELEASE_DIR/docker-compose.prod.yml" up -d

            echo "‚è≥ Waiting for containers to start..."
            sleep 8

            echo "üóÉ  Updating database schema..."
            docker exec heartzh-psychotest-1 npx prisma db push --skip-generate || echo "‚ö†Ô∏è Schema update skipped"

            echo "üîó Activating release..."
            ln -sfn "$RELEASE_DIR" "$APP_DIR"

            echo "üßπ Cleaning old releases (keep 3)..."
            ls -1dt /var/www/heartzh/releases/* | tail -n +4 | xargs -r rm -rf

            echo "‚úÖ Deployment complete!"
            docker ps
            docker compose -f "$RELEASE_DIR/docker-compose.prod.yml" logs --tail=30 psychotest
