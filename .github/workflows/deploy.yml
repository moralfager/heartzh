name: Deploy to Production

on:
  push:
    branches: [prod]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image with cache
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }},ghcr.io/${{ github.repository }}:prod
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          timeout: 10m
          command_timeout: 30m
          script: |
            set -e
            cd ${{ secrets.SERVER_PATH }}
            
            # Быстрое обновление конфигов без полного fetch
            git fetch origin prod --depth=1
            git reset --hard origin/prod
            
            # Устанавливаем переменную репозитория
            export GITHUB_REPOSITORY=${{ github.repository }}
            
            # Логин в GHCR
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Подтягиваем только свежий образ приложения
            docker pull ghcr.io/${{ github.repository }}:prod
            
            # Перезапуск только изменённого сервиса
            docker compose -f docker-compose.prod.yml up -d --no-build psychotest
            
            # Проверка здоровья
            sleep 5
            curl -fsS http://localhost:3000/api/health || {
              echo "❌ Health check failed"
              docker compose -f docker-compose.prod.yml logs psychotest --tail=100
              exit 1
            }
            
            echo "✅ Deployed: https://heartofzha.ru"
